{"ast":null,"code":"import HttpCliente from \"../servicios/HttpCliente\";\nexport const registrarUsuario = usuario => {\n  return new Promise((resolve, eject) => {\n    HttpCliente.post(\"/usuario/registrar\", usuario).then(response => {\n      resolve(response);\n    });\n  });\n};\nexport const obtenerUsuarioActual = dispatch => {\n  return new Promise((resolve, eject) => {\n    HttpCliente.get(\"/usuario\").then(response => {\n      if (response.data && response.data.imagenPerfil) {\n        let fotoPerfil = response.data.imagenPerfil;\n      }\n\n      dispatch({\n        type: \"INICIAR_SESION\",\n        sesion: response.data,\n        autenticado: true\n      });\n      resolve(response);\n    });\n  });\n};\nexport const actualizarUsuario = usuario => {\n  return new Promise((resolve, eject) => {\n    HttpCliente.put(\"/usuario/\", usuario).then(response => {\n      resolve(response);\n    }).catch(error => {\n      resolve(error.response);\n    });\n  });\n};\nexport const loginUsuario = usuario => {\n  return new Promise((resolve, eject) => {\n    HttpCliente.post(\"/usuario/login\", usuario).then(response => {\n      resolve(response);\n    });\n  });\n};","map":{"version":3,"sources":["C:/Users/Laptop/Desktop/Portfolio/FrontEnd-React/ProyectoCurso/src/actions/UsuarioAction.js"],"names":["HttpCliente","registrarUsuario","usuario","Promise","resolve","eject","post","then","response","obtenerUsuarioActual","dispatch","get","data","imagenPerfil","fotoPerfil","type","sesion","autenticado","actualizarUsuario","put","catch","error","loginUsuario"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,0BAAxB;AAEA,OAAO,MAAMC,gBAAgB,GAAIC,OAAD,IAAa;AAC3C,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrCL,IAAAA,WAAW,CAACM,IAAZ,CAAiB,oBAAjB,EAAuCJ,OAAvC,EAAgDK,IAAhD,CAAsDC,QAAD,IAAc;AACjEJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACD,KAFD;AAGD,GAJM,CAAP;AAKD,CANM;AAQP,OAAO,MAAMC,oBAAoB,GAAIC,QAAD,IAAc;AAChD,SAAO,IAAIP,OAAJ,CAAY,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrCL,IAAAA,WAAW,CAACW,GAAZ,CAAgB,UAAhB,EAA4BJ,IAA5B,CAAkCC,QAAD,IAAc;AAC7C,UAAIA,QAAQ,CAACI,IAAT,IAAiBJ,QAAQ,CAACI,IAAT,CAAcC,YAAnC,EAAiD;AAC/C,YAAIC,UAAU,GAAGN,QAAQ,CAACI,IAAT,CAAcC,YAA/B;AACD;;AACDH,MAAAA,QAAQ,CAAC;AACPK,QAAAA,IAAI,EAAE,gBADC;AAEPC,QAAAA,MAAM,EAAER,QAAQ,CAACI,IAFV;AAGPK,QAAAA,WAAW,EAAE;AAHN,OAAD,CAAR;AAKAb,MAAAA,OAAO,CAACI,QAAD,CAAP;AACD,KAVD;AAWD,GAZM,CAAP;AAaD,CAdM;AAgBP,OAAO,MAAMU,iBAAiB,GAAIhB,OAAD,IAAa;AAC5C,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrCL,IAAAA,WAAW,CAACmB,GAAZ,CAAgB,WAAhB,EAA6BjB,OAA7B,EACGK,IADH,CACSC,QAAD,IAAc;AAClBJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACD,KAHH,EAIGY,KAJH,CAIUC,KAAD,IAAW;AAChBjB,MAAAA,OAAO,CAACiB,KAAK,CAACb,QAAP,CAAP;AACD,KANH;AAOD,GARM,CAAP;AASD,CAVM;AAYP,OAAO,MAAMc,YAAY,GAAIpB,OAAD,IAAa;AACvC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,KAAV,KAAoB;AACrCL,IAAAA,WAAW,CAACM,IAAZ,CAAiB,gBAAjB,EAAmCJ,OAAnC,EAA4CK,IAA5C,CAAkDC,QAAD,IAAc;AAC7DJ,MAAAA,OAAO,CAACI,QAAD,CAAP;AACD,KAFD;AAGD,GAJM,CAAP;AAKD,CANM","sourcesContent":["import HttpCliente from \"../servicios/HttpCliente\";\r\n\r\nexport const registrarUsuario = (usuario) => {\r\n  return new Promise((resolve, eject) => {\r\n    HttpCliente.post(\"/usuario/registrar\", usuario).then((response) => {\r\n      resolve(response);\r\n    });\r\n  });\r\n};\r\n\r\nexport const obtenerUsuarioActual = (dispatch) => {\r\n  return new Promise((resolve, eject) => {\r\n    HttpCliente.get(\"/usuario\").then((response) => {\r\n      if (response.data && response.data.imagenPerfil) {\r\n        let fotoPerfil = response.data.imagenPerfil\r\n      }\r\n      dispatch({\r\n        type: \"INICIAR_SESION\",\r\n        sesion: response.data,\r\n        autenticado: true,\r\n      });\r\n      resolve(response);\r\n    });\r\n  });\r\n};\r\n\r\nexport const actualizarUsuario = (usuario) => {\r\n  return new Promise((resolve, eject) => {\r\n    HttpCliente.put(\"/usuario/\", usuario)\r\n      .then((response) => {\r\n        resolve(response);\r\n      })\r\n      .catch((error) => {\r\n        resolve(error.response);\r\n      });\r\n  });\r\n};\r\n\r\nexport const loginUsuario = (usuario) => {\r\n  return new Promise((resolve, eject) => {\r\n    HttpCliente.post(\"/usuario/login\", usuario).then((response) => {\r\n      resolve(response);\r\n    });\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}